# Generated by Django 3.0.5 on 2020-05-01 00:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeoStates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.IntegerField()),
                ('country', models.CharField(max_length=100)),
                ('wikipedia', models.CharField(max_length=200)),
                ('states', models.CharField(max_length=100)),
                ('state_abbrev', models.CharField(max_length=100)),
                ('geo', models.TextField()),
            ],
            options={
                'db_table': 'geo_states',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Routes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('countrynum', models.IntegerField()),
                ('statenum', models.IntegerField()),
                ('route', models.IntegerField()),
                ('routename', models.CharField(max_length=100)),
                ('active', models.IntegerField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('stratum', models.IntegerField()),
                ('bcr', models.IntegerField()),
                ('routetypeid', models.IntegerField()),
                ('routetypedetailid', models.IntegerField()),
            ],
            options={
                'db_table': 'routes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpatialRefSys',
            fields=[
                ('srid', models.IntegerField(primary_key=True, serialize=False)),
                ('auth_name', models.CharField(blank=True, max_length=256, null=True)),
                ('auth_srid', models.IntegerField(blank=True, null=True)),
                ('srtext', models.CharField(blank=True, max_length=2048, null=True)),
                ('proj4text', models.CharField(blank=True, max_length=2048, null=True)),
            ],
            options={
                'db_table': 'spatial_ref_sys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('aou', models.IntegerField()),
                ('english_common_name', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'species',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateCodes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('countrynum', models.IntegerField()),
                ('statenum', models.IntegerField()),
                ('state_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'state_codes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Topology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
                ('srid', models.IntegerField()),
                ('precision', models.FloatField()),
                ('hasz', models.BooleanField()),
            ],
            options={
                'db_table': 'topology',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsStates',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('routedataid', models.IntegerField()),
                ('countrynum', models.IntegerField()),
                ('statenum', models.IntegerField()),
                ('route', models.IntegerField()),
                ('rpid', models.IntegerField()),
                ('year', models.IntegerField()),
                ('aou', models.IntegerField()),
                ('count10', models.IntegerField()),
                ('count20', models.IntegerField()),
                ('count30', models.IntegerField()),
                ('count40', models.IntegerField()),
                ('count50', models.IntegerField()),
                ('stoptotal', models.IntegerField()),
                ('speciestotal', models.IntegerField()),
            ],
            options={
                'db_table': 'us_states',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Weather',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('routedataid', models.IntegerField()),
                ('countrynum', models.IntegerField()),
                ('statenum', models.IntegerField()),
                ('route', models.IntegerField()),
                ('rpid', models.IntegerField()),
                ('year', models.IntegerField()),
                ('month', models.IntegerField()),
                ('day', models.IntegerField()),
                ('obsn', models.IntegerField()),
                ('totalspp', models.IntegerField()),
                ('starttemp', models.FloatField(blank=True, null=True)),
                ('endtemp', models.FloatField(blank=True, null=True)),
                ('tempscale', models.CharField(max_length=10)),
                ('startwind', models.IntegerField()),
                ('endwind', models.IntegerField()),
                ('startsky', models.IntegerField()),
                ('endsky', models.IntegerField()),
                ('assistant', models.FloatField(blank=True, null=True)),
                ('qualitycurrentid', models.IntegerField()),
                ('runtype', models.IntegerField()),
            ],
            options={
                'db_table': 'weather',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('topology', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='birds.Topology')),
                ('layer_id', models.IntegerField()),
                ('schema_name', models.CharField(max_length=10)),
                ('table_name', models.CharField(max_length=10)),
                ('feature_column', models.CharField(max_length=10)),
                ('feature_type', models.IntegerField()),
                ('level', models.IntegerField()),
                ('child_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'layer',
                'managed': False,
            },
        ),
    ]
